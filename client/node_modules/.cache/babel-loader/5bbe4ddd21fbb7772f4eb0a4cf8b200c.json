{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\OneDrive\\\\DKIT\\\\mongodb_with_validation\\\\client\\\\src\\\\components\\\\DisplayAllMovies.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport MovieTable from \"./MovieTable\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class DisplayAllMovies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/movies\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Records read\");\n          this.setState({\n            movies: res.data\n          });\n        }\n      } else {\n        console.log(\"Record not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(MovieTable, {\n      movies: this.state.movies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-new-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"blue-button\",\n      to: \"/AddMovie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Add New Movie\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\kevin\\OneDrive\\DKIT\\mongodb_with_validation\\client\\src\\components\\DisplayAllMovies.js"],"names":["React","Component","Link","axios","MovieTable","SERVER_HOST","DisplayAllMovies","constructor","props","state","movies","componentDidMount","get","then","res","data","errorMessage","console","log","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,SAAQC,WAAR,QAA0B,4BAA1B;AAGA,eAAe,MAAMC,gBAAN,SAA+BL,SAA/B,CACf;AACIM,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAC;AADE,KAAb;AAGH;;AAGDC,EAAAA,iBAAiB,GACjB;AACIR,IAAAA,KAAK,CAACS,GAAN,WAAaP,WAAb,cACCQ,IADD,CACMC,GAAG,IACT;AACI,UAAGA,GAAG,CAACC,IAAP,EACA;AACI,YAAID,GAAG,CAACC,IAAJ,CAASC,YAAb,EACA;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAJ,CAASC,YAArB;AACH,SAHD,MAKA;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,eAAKC,QAAL,CAAc;AAACT,YAAAA,MAAM,EAAEI,GAAG,CAACC;AAAb,WAAd;AACH;AACJ,OAXD,MAaA;AACIE,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,KAnBD;AAoBH;;AAGDE,EAAAA,MAAM,GACN;AACI,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,EAAE,EAAE,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAHJ,CADJ,CADJ;AAWH;;AAjDL","sourcesContent":["import React, {Component} from \"react\"\nimport {Link} from \"react-router-dom\"\n\nimport axios from \"axios\"\n\nimport MovieTable from \"./MovieTable\"\n\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class DisplayAllMovies extends Component\n{\n    constructor(props) \n    {\n        super(props)\n        \n        this.state = {\n            movies:[]\n        }\n    }\n    \n    \n    componentDidMount() \n    {\n        axios.get(`${SERVER_HOST}/movies`)\n        .then(res => \n        {\n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                {           \n                    console.log(\"Records read\")   \n                    this.setState({movies: res.data})\n                }   \n            }\n            else\n            {\n                console.log(\"Record not found\")\n            }\n        })\n    }\n\n  \n    render() \n    {   \n        return (           \n            <div className=\"form-container\">\n                <div className=\"table-container\">\n                    <MovieTable movies={this.state.movies} />\n\n                    <div className=\"add-new-movie\">\n                        <Link className=\"blue-button\" to={\"/AddMovie\"}>Add New Movie</Link>\n                    </div>\n                </div>\n            </div> \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}